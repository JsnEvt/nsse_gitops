#O pod esta com status de ImagePullBackOff que significa que a autenticacao e requerida
#O erro ocorre pq as maquinas nao estao logadas no ECR privado, por este motivo precisamos
#fazer a criacao do ImagePullSecrets. Assim o pod conseguira fazer o download da imagem.
#Ele fara isso criando um secret docker-registry:

#No prompt sao executada essas linhas de comando abaixo para criacao do arquivo com as informacoes necessarias:
# kubectl create secret docker-registry ecr \
# --docker-username=AWS \
# --docker-password=$(aws ecr get-login-password --region us-east-1) \
# --docker-server=uri_do_ecr
# --dry-run=client -o yaml > image-pull-secret.yml

#Documentacao Kubernetes:
#https://kubernetes.io/docs/concepts/configuration/secret/

#Usei o ECR da BIA como exemplo:

apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyI5MDU0MTgzMzkxMzIuZGtyLmVjci51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSI6eyJ1c2VybmFtZSI6IkFXUyIsInBhc3N3b3JkIjoiZXlKd1lYbHNiMkZrSWpvaVJXSTVjVXQ0VDFoYVRFdEtMMHRIVkZWNk1HaG9VRkZ4VlhSdmJGRmxSblJHUzBaa2ExZGhNRUpVYXpoTU4wUndVeXRvVnk5SVVscFJOelIyT1hFcmFsQm5ORTVrTWxnMlJFb3JWVWR0UlhCRE1rcGpWRUptYTJRemFTdEpLMUI1U0ZOWmJXUXdObXhvT0ZoME5WcHVOR2RxYW5GTFZsSlFSRFZ0THpjMFRUYzNWVU5LVkRGTWMyZEdZMlUyTnpsVVJIZE9lVEV4U2xNMGQzRTBVbU54ZFZoNVdXRnZSelZaVmsxMFdsaG5VVkZpVWxSTk5rSnhlWE5QZWk5NEwyRkJVMVFyUlhZMk5GWm9jVkU0UW01Uk5IWkxTa0Z3TDJveGQxSlVjRWRCZWxGWldIWkhha0oyYWxWV0t6Qk9aVUYwV0U1Sk5YQTNibE0xY2tWNFlWUkpMMHdyYUhOa1NYaE9RVVpuYVdGclUyNXZSM0JNWkU4NFNUWmlOV3MxUzB0b2J6UnRWbFV6WjJwT1MwUlFkRmtyTWpOa2FHeERSa2NyV0haUFQwWkRaa3hRWmpOM1N6VmxUVTlLTWs1cmFqUkVjSFZ0TUZaNGVERjJiVXN3TW1Kb1VreFJOWHBtTDNkdVpWQktVVFkwT0ZRd1VqWmlkVVV2VmxBcmRYSnhUemhhSzIwMGNtRmtZa2xSYVhad1dtbHdjVWd4VGxSMldXZEpORWR4VVVsYVdqaFFMMFkxU3pselNXczBMMWQyVFdWQmRsSkJaM2QxWjAxclIySm1jM1k1UTBGd1pWSlpZblV2YVU1MVFtWlBlbVYwY0U1bWJteENPWElyUkRCR0swSkdjV2xuVW01S2J6VjJjMVpNSzFBNFVYZFdVV3BoV2xSb1JVbzJPRzQ1VXpsQ2JERXZUbVpsZEROTlFVRlBObEJ1YVV3MllXWmFTVFZDYzNCSFVpOXJaMm92Vlc1VVVsUlFNbVJYVVRsNVpHeFZSRlJRV1hkbFRqZHllWFk0UTJWWGNtdG5UVlZRTm5sUVVIZFZOMHByUVVZemVqRnlTMFk0V1hOSlUwdzNXa0k0UmtWd09FdFpRWGRyT1ZKbFJESm9OMjF4YkhCTlZraHRTbWg2VDFKc2VuZENOV2x2U0hWb1lucE1NbThyYzBKemJWVndOVlkwVWxwaFQyTm5hbU5xVEdVM1NUWllkV2wyV1dKSVpVRmpPSFkxVlZkM1oydzRiMHhtU3pKMFFWazJTak01TURGYVZtOXhWMFZqVGs4NGVtNTRVa1kxUTI5ekswaEthMDhyYmxZeFNVRllTVGRrWlhwYVdGZzFhVkZxYjNobFpVWnFjM2xtWmpscllVcFdOVGhZY0V3MmRHaHpjbVpOWTB0MGVVVXZjMk5UTDA4MmMxRlpWbXBVVEdscGRXeHdVMVZaWlhaTVZsWXpSRWx4YmxaRFdreFBkbWxRWW5vdmVEZ3ZUMjlwZEdodFF6SjJNM1JPWlRadVJuSmFiQzlpT0V4TksxVmhlbVZPT1RGSWVHSjZkVE0xV2tGWmRVVXZaVXBEZDBwVmMyMUhOelJDUWpWalkxQnFUV0ZtVUhGRVRURmFVSGN4UkhoRFMwVjBZbWhOY0ZCb1FWSnhiVWxxUWxKR1FYSjNabTE0U2paeE4wVm5NV0psS3paTFpUTjVTRWN2ZVNzemVHTjBZMlJyVUVack5YTTRjRnAxVFc0Mkwyc3dVbVZST0RSSFJrUktMMkkxVkhKNGEyVnpWalZXYm1wYVVTOXRTMnd3TkV4cVIwSllVM0ZRTlZaaFprVXlJaXdpWkdGMFlXdGxlU0k2SWtGUlJVSkJTR2gzYlRCWllVbFRTbVZTZEVwdE5XNHhSeloxY1dWbGExaDFiMWhZVUdVMVZVWmpaVGxTY1Rndk1UUjNRVUZCU0RSM1prRlpTa3R2V2tsb2RtTk9RVkZqUjI5SE9IZGlVVWxDUVVSQ2IwSm5hM0ZvYTJsSE9YY3dRa0ozUlhkSVoxbEtXVWxhU1VGWFZVUkNRVVYxVFVKRlJVUkhWRlYxYzNOUlpVMWtRa3BvZEZwRVFVbENSVWxCTnpONU5EYzJZU3RUZHpaRFYwRllTSEoyYW5WbWFrZzRhM1EwYm5STVZuSXdhbVpGZFdveWMwVnNMemwyVlhONmFYWk9SekJFUldSRVJrWnViUzgwWlZJNVJFcFhlRmgxSzA1MlNITnJNRGc5SWl3aWRtVnljMmx2YmlJNklqSWlMQ0owZVhCbElqb2lSRUZVUVY5TFJWa2lMQ0psZUhCcGNtRjBhVzl1SWpveE56STROemt5TnpRMWZRPT0iLCJhdXRoIjoiUVZkVE9tVjVTbmRaV0d4ellqSkdhMGxxYjJsU1YwazFZMVYwTkZReGFHRlVSWFJMVERCMFNGWkdWalpOUjJodlZVWkdlRlpZVW5aaVJrWnNVbTVTUjFNd1dtdGhNV1JvVFVWS1ZXRjZhRTFPTUZKM1ZYbDBiMVo1T1VsVmJIQlNUbnBTTWs5WVJYSmhiRUp1VGtVMWEwMXNaekpTUlc5eVZsVmtkRkpZUWtSTmEzQnFWa1ZLYldFeVVYcGhVM1JLU3pGQ05WTkdUbHBpVjFGM1RtMTRiMDlHYURCT1ZuQjFUa2RrY1dGdVJreFdiRXBSVWtSV2RFeDZZekJVVkdNelZsVk9TMVpFUmsxak1tUkhXVEpWTWs1NmJGVlNTR1JQWlZSRmVGTnNUVEJrTTBVd1ZXMU9lR1JXYURWWFYwWjJVbnBXV2xack1UQlhiR2h1VlZaR2FWVnNVazVPYTBwNFpWaE9VR1ZwT1RSTU1rWkNWVEZSY2xKWVdUSk9SbHB2WTFaRk5GRnROVkpPU0ZwTVUydEdkMHd5YjNoa01VcFZZMFZrUW1Wc1JscFhTRnBJWVd0S01tRnNWbGRMZWtKUFdsVkdNRmRGTlVwT1dFRXpZbXhOTVdOclZqUlpWbEpLVERCM2NtRklUbXRUV0doUFVWVmFibUZYUm5KVk1qVjJVak5DVFZwRk9EUlRWRnBwVGxkek1WTXdkRzlpZWxKMFZteFZlbG95Y0U5VE1GSlJaRVpyY2sxcVRtdGhSM2hFVW10amNsZElXbEJVTUZwRVdtdDRVVnBxVGpOVGVsWnNWRlU1UzAxck5YSmhhbEpGWTBoV2RFMUdXalJsUkVZeVlsVnpkMDF0U205VmEzaFNUbGh3YlV3elpIVmFWa0pMVlZSWk1FOUdVWGRWYWxwcFpGVlZkbFpzUVhKa1dFcDRWSHBvWVVzeU1EQmpiVVpyV1d0c1VtRllXbmRYYld4M1kxVm5lRlJzVWpKWFYyUktUa1ZrZUZWVmJHRlhhbWhSVERCWk1WTjZiSHBUVjNNd1RERmtNbFJYVmtKa2JFcENXak5rTVZvd01YSlNNa3B0WXpOWk5WRXdSbmRhVmtwYVdXNVZkbUZWTlRGUmJWcFFaVzFXTUdORk5XMWliWGhEVDFoSmNsSkVRa2RMTUVwSFkxZHNibFZ0TlV0aWVsWXlZekZhVFVzeFFUUlZXR1JYVlZkd2FGZHNVbTlTVlc4eVQwYzBOVlY2YkVOaVJFVjJWRzFhYkdSRVRrNVJWVVpRVG14Q2RXRlZkekpaVjFwaFUxUldRMk16UWtoVmFUbHlXakp2ZGxaWE5WVlZiRkpSVFcxU1dGVlViRFZhUjNoV1VrWlNVVmRZWkd4VWFtUjVaVmhaTkZFeVZsaGpiWFJ1VkZaV1VVNXViRkZWU0dSV1RqQndjbEZWV1hwbGFrWjVVekJaTkZkWVRrcFZNSGN6VjJ0Sk5GSnJWbmRQUlhSYVVWaGtjazlXU214U1JFcHZUakl4ZUdKSVFrNVdhMmgwVTIxb05sUXhTbk5sYm1SRFRsZHNkbE5JVm05WmJuQk5UVzA0Y21Nd1NucGlWbFozVGxaWk1GVnNjR2hVTWs1dVlXMU9jVlJIVlROVFZGcFpaRmRzTWxkWFNrbGFWVVpxVDBoWk1WWldaRE5hTW5jMFlqQjRiVk42U2pCUlZtc3lVMnBOTlUxRVJtRldiVGw0VmpCV2FsUnJPRFJsYlRVMFZXdFpNVkV5T1hwTE1HaExZVEE0Y21Kc1dYaFRWVVpaVTFSa2ExcFljR0ZYUm1jeFlWWkdjV0l6YUd4YVZWcHhZek5zYlZwcWJISlpWWEJYVGxSb1dXTkZkekprUjJoNlkyMWFUbGt3ZERCbFZWVjJZekpPVkV3d09ESmpNVVphVm0xd1ZWUkhiSEJrVjNoM1ZURldXbHBZV2sxV2JGbDZVa1ZzZUdKc1drUlhhM2hRWkcxc1VWbHViM1psUkdkMlZESTVjR1JIYUhSUmVrb3lUVE5TVDFwVVduVlNia3BoWWtNNWFVOUZlRTVMTVZab1pXMVdUMDlVUmtsbFIwbzJaRlJOTVZkclJscGtWVlYyV2xWd1JHUXdjRlpqTWpGSVRucFNRMUZxVm1wWk1VSnhWRmRHYlZWSVJrVlVWRVpoVlVoamVGSklhRVJUTUZZd1dXMW9UbU5HUW05UlZrcDRZbFZzY1ZGc1NrZFJXRW96V20weE5GTnFXbmhPTUZadVRWZEtiRXQ2V2t4YVZFNDFVMFZqZG1WVGMzcGxSMDR3V1RKU2NsVkZXbkpPV0UwMFkwWndNVlJYTkRKTU1uTjNWVzFXVWs5RVVraFNhMUpMVERKSk1WWklTalJoTWxaNlZtcFdWMkp0Y0dGVlV6bDBVekozZDA1RmVIRlNNRXBaVlROR1VVNVdXbWhhYTFWNVNXbDNhVnBIUmpCWlYzUnNaVk5KTmtsclJsSlNWVXBDVTBkb00ySlVRbHBaVld4VVUyMVdVMlJGY0hST1Z6UjRVbnBhTVdOWFZteGhNV2d4WWpGb1dWVkhWVEZXVlZwcVdsUnNVMk5VWjNaTlZGSXpVVlZHUWxORVVqTmFhMFphVTJ0MGRsZHJiRzlrYlU1UFVWWkdhbEl5T1VoUFNHUnBWVlZzUTFGVlVrTmlNRXB1WVROR2IyRXliRWhQV0dOM1VXdEtNMUpZWkVsYU1XeExWMVZzWVZOVlJsaFdWVkpEVVZWV01WUlZTa1pTVlZKSVZrWldNV016VGxKYVZURnJVV3R3YjJSR2NFVlJWV3hEVWxWc1FrNTZUalZPUkdNeVdWTjBWR1I2V2tSV01FWlpVMGhLTW1GdVZtMWhhMmMwWVROUk1HSnVVazFXYmtsM1lXMWFSbVJYYjNsak1GWnpUSHBzTWxaWVRqWmhXRnBQVW5wQ1JWSlhVa1ZTYTFwMVlsTTRNRnBXU1RWU1JYQllaVVpvTVVzd05USlRTRTV5VFVSbk9VbHBkMmxrYlZaNVl6SnNkbUpwU1RaSmFrbHBURU5LTUdWWVFteEphbTlwVWtWR1ZWRldPVXhTVm10cFRFTktiR1ZJUW5CamJVWXdZVmM1ZFVscWIzaE9la2swVG5wcmVVNTZVVEZtVVQwOSJ9fX0=
kind: Secret
metadata:
  name: ecr-image-pull-credentials
type: kubernetes.io/dockerconfigjson
